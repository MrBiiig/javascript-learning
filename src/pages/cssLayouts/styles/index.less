.page_cssLayouts_box {
  // * {
  //   //“border盒”模型（width height固定后，padding border会向内挤压content，而“content盒”则会向外挤）
  //   box-sizing: border-box;
  // }

  .inner_border_box {
    * {
      box-sizing: border-box;
    }
  }
  .inner_content_box {
    * {
      box-sizing: content-box;
    }
  }
  .bfc_container {
    overflow: hidden;
  }
  .bg_color_1 {
    background-color: #000000;
  }
  .bg_color_2 {
    background-color: #880000;
  }
  .bg_color_3 {
    background-color: #dd0000;
  }
  .bg_color_4 {
    background-color: #008800;
  }
  .bg_color_5 {
    background-color: #00dd00;
  }
  .bg_color_6 {
    background-color: #000088;
  }
  .bg_color_7 {
    background-color: #0000dd;
  }
  /* 圣杯布局（margin-left负值方式） */
  .holy_grail_layout1 {
    color: #fff;
    @left_width: 200px;
    @right_width: 150px;
    &.inner_content_box {
      // content-box情况
      .header {
      }
      .footer {
        clear: left; //2.隔离后面元素受浮动的影响
      }
      .content {
        padding-left: @left_width; //5.要消重叠，给左栏腾空间（但又把左栏挤到右边）
        padding-right: @right_width; //8.要消重叠，给右栏腾空间（但又把右栏栏挤到左边）
        .center {
          float: left; //1.中间左中右三栏左浮动
          width: 100%; //3.因浮动而宽度不再默认占满整行了，调整一下
        }
        .left {
          width: @left_width;

          float: left; //1
          margin-left: -100%; //4.利用margin负值，使左栏（左边）紧靠上一行最左边（但会与中栏部分重叠）
          position: relative; //6.利用相对定位使被挤的左栏偏移再回到这行最左边
          left: -@left_width; //6
        }
        .right {
          width: @right_width;

          float: left; //1
          margin-left: -@right_width; //7.同样利用margin负值，使右栏（右边）紧靠上一行最右边（但会与中栏部分重叠）
          position: relative; //9.利用相对定位使被挤的右栏偏移再回到这行最右边
          right: -@right_width; //9
        }
      }
    }
    &.inner_border_box {
      // border-box情况
      .header {
      }
      .footer {
        clear: left; //2.隔离后面元素受浮动的影响
      }
      .content {
        padding-left: @left_width; //5.要消重叠，给左栏腾空间（但又把左栏挤到右边）
        padding-right: @right_width; //8.要消重叠，给右栏腾空间（但又把右栏栏挤到左边）
        .center {
          float: left; //1.中间左中右三栏左浮动
          width: 100%; //3.因浮动而宽度不再默认占满整行了，调整一下
        }
        .left {
          width: @left_width;

          float: left; //1
          margin-left: -100%; //4.利用margin负值，使左栏紧靠上一行最左边（但会与中栏部分重叠）
          position: relative; //6.利用相对定位使被挤的左栏偏移再回到这行最左边
          left: -@left_width; //6
        }
        .right {
          width: @right_width;

          float: left; //1
          margin-left: -@right_width; //7.同样利用margin负值，使右栏（右边）紧靠上一行最右边（但会与中栏部分重叠）
          position: relative; //9.利用相对定位使被挤的右栏偏移再回到这行最右边
          right: -@right_width; //9
        }
      }
    }
  }
  /* 圣杯布局（flex方式） */
  .holy_grail_layout2 {
    color: #fff;
    @left_width: 200px;
    @right_width: 150px;
    .header {
    }
    .footer {
    }
    .content {
      display: flex;
      .left {
        width: @left_width;
      }
      .right {
        width: @right_width;
      }
      .center {
        flex: 1;
      }
    }
  }
  /* 双飞翼布局 */
  .twin_wings_layout {
    color: #fff;
    @left_width: 200px;
    @right_width: 150px;
    .header {
    }
    .footer {
      clear: left;
    }
    .content {
      .center {
        float: left;
        width: 100%;
        .inner_center {
          margin-left: @left_width;
        }
      }
      .left {
        width: @left_width;

        float: left;
        margin-left: -100%;
      }
      .right {
        width: @right_width;

        float: left;
        margin-left: -@right_width;
      }
    }
  }
}
.my_wife {
  display: inline-block;
  cursor: pointer;
  padding: 10px;
  border: 1px solid #000;
  border-radius: 10px;
  font-family: SimSun;
  font-weight: bold;
  &:hover {
    box-shadow: 1px 1px 4px 2px #ccc;
  }
}
